@page "/inventoryreport"
@inject ISearchInventoryTransactionsUseCase SearchInventoryTransactionsUseCase
@inject IJSRuntime JSRuntime

<h3>Inventory Transactions Report</h3>
<br />
<div id="printarea">
    <div class="row">
        <div class="col">
            <label for="inv">Inventory Name</label>
            <input type="text" id="inv" class="form-control" @bind-value="inventoryName" />
        </div>
        <div class="col">
            <label for="df">Date From</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>
        <div class="col">
            <label for="dt">Date To</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>
        <div class="col">
            <label for="at">Activity Type</label>
            <select id="at" class="form-control" @bind="activityTypeId">
                <option value="0"></option>
                <option value="1">Purchase Inventory</option>
                <option value="2">Produce Product</option>
            </select>
        </div>
        <div class="col">
            <label>&nbsp;</label>
            <button class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
        </div>
        <div class="col">
            <label>&nbsp;</label>
            <button class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>
    <br />
    @if (invTransactions != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Inventory Name</th>
                    <th>Activity</th>
                    <th>Quantity Before</th>
                    <th>Quantity After</th>
                    <th>Unit Price</th>
                    <th>PO#</th>
                    <th>Prodcution#</th>
                    <th>Done By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var it in invTransactions)
                {
                    <tr>
                        <td>@it.TransactionDate.ToString("dd/MM/yyyy")</td>
                        <td>@it.Inventory.InventoryName</td>
                        <td>
                            @if (it.ActivityType == InventoryTransactionType.PurchaseInventory)
                            {
                                <text>Purchase</text>
                            }
                            else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                            {
                                <text>Produce</text>
                            }
                        </td>
                        <td>@it.QuantityBefore</td>
                        <td>@it.QuantityAfter</td>
                        @if(it.ActivityType== InventoryTransactionType.PurchaseInventory)
                        {
                        <td>@it.UnitPrice.ToString("c")</td>                     
                        }
                        else
                        {
                            <td></td>
                        }
                        <td>@it.PONumber</td>
                        <td>@it.ProductionNumber</td>
                        <td>@it.DoneBy</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private string inventoryName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<InventoryTransaction>? invTransactions;

    private async Task SearchInventories()
    {
        InventoryTransactionType? invType = null;

        if (activityTypeId != 0)
        {
            invType = (InventoryTransactionType)activityTypeId;
        }

        invTransactions = await SearchInventoryTransactionsUseCase.ExecuteAsync(inventoryName, dateFrom, dateTo, invType);
    }

    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }
}
