@page "/addinventory"
@inject IAddInventoryUseCase AddInvetoryUseCase
@inject NavigationManager NavigationManager

<h3>Add Invenotry</h3>
<br />
<EditForm Model="@inventory" OnValidSubmit="@SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="from-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" @bind-Value="@inventory.InventoryName" class="form-control"></InputText>
    </div>

    <div class="from-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" @bind-Value="@inventory.Quantity" class="form-control"></InputNumber>
    </div>

    <div class="from-group">
        <label for="price">Price</label>
        <InputNumber id="price" @bind-Value="@inventory.Price" class="form-control"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();

    private async Task SaveInventory()
    {
        await AddInvetoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
